package org.opentestsystem.rdw.schema;

import org.flywaydb.core.Flyway;
import org.flywaydb.core.api.FlywayException;
import org.flywaydb.core.api.MigrationInfoService;

import javax.sql.DataSource;
import java.util.Collections;

/**
 * RDW Schema migrations.  Wraps a subset of {@see org.flywaydb.core.Flyway}.
 */
public class SchemaMigration {

    private Flyway flyway;

    public SchemaMigration(DataSource dataSource, String schemaName, Migration migration) {
        flyway = Flyway.configure()
                .table("schema_version")
                .locations(migration.directory + "/sql")
                .placeholders(Collections.singletonMap("schemaName", schemaName))
                .schemas(schemaName)
                .dataSource(dataSource)
                .load();
    }

    public enum Migration {
        MigrateOlap("migrate_olap"),
        Reporting("reporting"),
        ReportingOlap("reporting_olap"),
        Warehouse("warehouse");

        private final String directory;

        Migration(String directory) {
            this.directory = directory;
        }
    }

    /**
     * Wraps {@see org.flywaydb.core.Flyway#migrate()}
     *
     * @return The number of successfully applied migrations.
     * @throws FlywayException when the migration failed.
     */
    public int migrate() throws FlywayException {
        return flyway.migrate();
    }

    /**
     * Wraps {@see org.flywaydb.core.Flyway#clean()}
     *
     * @throws FlywayException when the clean fails.
     */
    public void clean() {
        flyway.clean();
    }

    /**
     * Wraps {@see org.flywaydb.core.Flyway#info()}
     *
     * @return All migrations sorted by version, oldest first.
     * @throws FlywayException when the info retrieval failed.
     */
    public MigrationInfoService info() {
        return flyway.info();
    }

    /**
     * Wraps {@see org.flywaydb.core.Flyway#validate()}
     *
     * @throws FlywayException when the validation failed.
     */
    public void validate() throws FlywayException {
        flyway.validate();
    }
}
